<?xml version="1.0"?>

<!DOCTYPE MODE SYSTEM "xmode.dtd">

<MODE>
	<PROPS>
		<PROPERTY NAME="lineComment" VALUE="#" />
		<PROPERTY NAME="indentOpenBrackets" VALUE="{" />
		<PROPERTY NAME="indentCloseBrackets" VALUE="}" />
	</PROPS>
	<RULES ESCAPE="\" IGNORE_CASE="FALSE" HIGHLIGHT_DIGITS="TRUE">
		<!-- whitespace: (space and tab) -->
		<WHITESPACE> </WHITESPACE>
		<WHITESPACE>	</WHITESPACE>

		<!-- Comments -->
		<EOL_SPAN TYPE="COMMENT1">#</EOL_SPAN>

		<!-- Rules added by EPIC - START -->
		<SPAN TYPE="INVALID" NO_LINE_BREAK="FALSE" IGNORE_TEXT_AFTER_START_TAG="TRUE">
			<GROUP>__END__</GROUP>
			<GROUP>__DATA__</GROUP>
			<END>@EOF</END>
		</SPAN>

		<!-- TYPE is LABEL so that =head1 and =cut are highlighted as so -->
		<SPAN TYPE="LABEL" AT_LINE_START="TRUE" DELEGATE="POD">
			<GROUP>=head1</GROUP>
			<GROUP>=head2</GROUP>
			<GROUP>=head3</GROUP>
			<GROUP>=head4</GROUP>
			<GROUP>=item</GROUP>
			<GROUP>=over</GROUP>
			<GROUP>=back</GROUP>
			<GROUP>=pod</GROUP>
			<GROUP>=for</GROUP>
			<GROUP>=begin</GROUP>
			<GROUP>=end</GROUP>
			<GROUP>=comment</GROUP> 
			<END>=cut</END>
		</SPAN>

		<!-- Variables -->
		<SEQ TYPE="KEYWORD2">$`</SEQ>
		<SEQ TYPE="KEYWORD2">$'</SEQ>
		<SEQ TYPE="KEYWORD2">$"</SEQ>

		<SPAN TYPE="KEYWORD2" NO_LINE_BREAK="FALSE" MATCH_BRACKET="TRUE">
			<GROUP>${</GROUP>
			<GROUP>@{</GROUP>
			<GROUP>%{</GROUP>
			<END>}</END>
		</SPAN>

		<SEQ TYPE="NULL">\"</SEQ>    <!-- To avoid inproper Quote spanning -->
		<SEQ TYPE="NULL">\*</SEQ>    <!-- To avoid inproper Quote spanning -->
		<SEQ TYPE="NULL">$::</SEQ>   <!-- To avoid inproper Marks -->
		<SEQ TYPE="NULL">@::</SEQ>   <!-- To avoid inproper Marks -->
		<SEQ TYPE="NULL">%::</SEQ>   <!-- To avoid inproper Marks -->

        <MARK_FOLLOWING TYPE="KEYWORD2">$#</MARK_FOLLOWING>
		<MARK_FOLLOWING TYPE="KEYWORD2">$</MARK_FOLLOWING>
		<MARK_FOLLOWING TYPE="KEYWORD2">@</MARK_FOLLOWING>
		<MARK_FOLLOWING TYPE="KEYWORD2">%</MARK_FOLLOWING>
		<MARK_FOLLOWING TYPE="KEYWORD2">-&gt;</MARK_FOLLOWING>

		<!-- Literals -->
		<SPAN TYPE="LITERAL1">
			<BEGIN>"</BEGIN>
			<END>"</END>
		</SPAN>
		<SPAN TYPE="LITERAL1">
			<BEGIN>'</BEGIN>
			<END>'</END>
		</SPAN>

		<!-- Exec -->
		<SPAN TYPE="KEYWORD3" DELEGATE="EXEC">
			<BEGIN>`</BEGIN>
			<END>`</END>
		</SPAN>

		<!-- Operators -->
		<SEQ TYPE="OPERATOR">-r</SEQ>
		<SEQ TYPE="OPERATOR">-w</SEQ>
		<SEQ TYPE="OPERATOR">-x</SEQ>
		<SEQ TYPE="OPERATOR">-o</SEQ>
		<SEQ TYPE="OPERATOR">-R</SEQ>
		<SEQ TYPE="OPERATOR">-W</SEQ>
		<SEQ TYPE="OPERATOR">-X</SEQ>
		<SEQ TYPE="OPERATOR">-O</SEQ>
		<SEQ TYPE="OPERATOR">-e</SEQ>
		<SEQ TYPE="OPERATOR">-z</SEQ>
		<SEQ TYPE="OPERATOR">-s</SEQ>
		<SEQ TYPE="OPERATOR">-f</SEQ>
		<SEQ TYPE="OPERATOR">-d</SEQ>
		<SEQ TYPE="OPERATOR">-l</SEQ>
		<SEQ TYPE="OPERATOR">-p</SEQ>
		<SEQ TYPE="OPERATOR">-S</SEQ>
		<SEQ TYPE="OPERATOR">-b</SEQ>
		<SEQ TYPE="OPERATOR">-c</SEQ>
		<SEQ TYPE="OPERATOR">-t</SEQ>
		<SEQ TYPE="OPERATOR">-u</SEQ>
		<SEQ TYPE="OPERATOR">-g</SEQ>
		<SEQ TYPE="OPERATOR">-k</SEQ>
		<SEQ TYPE="OPERATOR">-u</SEQ>
		<SEQ TYPE="OPERATOR">-T</SEQ>
		<SEQ TYPE="OPERATOR">-B</SEQ>
		<SEQ TYPE="OPERATOR">-M</SEQ>
		<SEQ TYPE="OPERATOR">-A</SEQ>
		<SEQ TYPE="OPERATOR">-C</SEQ>
		<SEQ TYPE="OPERATOR">|</SEQ>
		<SEQ TYPE="OPERATOR">&amp;</SEQ>
		<SEQ TYPE="OPERATOR">!</SEQ>
		<SEQ TYPE="OPERATOR">&gt;</SEQ>
		<SEQ TYPE="NULL">)</SEQ>
		<SEQ TYPE="NULL">(</SEQ>
		<SEQ TYPE="OPERATOR">=</SEQ>
		<SEQ TYPE="OPERATOR">&gt;=</SEQ>
		<SEQ TYPE="OPERATOR">+</SEQ>
		<SEQ TYPE="OPERATOR">-</SEQ>
		<SEQ TYPE="OPERATOR">*</SEQ>
		<SEQ TYPE="OPERATOR">^</SEQ>
		<SEQ TYPE="OPERATOR">~</SEQ>
		<SEQ TYPE="OPERATOR">}</SEQ>
		<SEQ TYPE="OPERATOR">{</SEQ>
		<SEQ TYPE="OPERATOR">.</SEQ>
		<SEQ TYPE="OPERATOR">,</SEQ>
		<SEQ TYPE="NULL">;</SEQ>
		<SEQ TYPE="NULL">]</SEQ>
		<SEQ TYPE="NULL">[</SEQ>
		<SEQ TYPE="NULL">:</SEQ>
		<SEQ TYPE="KEYWORD1">
			<GROUP>BEGIN</GROUP>
			<GROUP>END</GROUP>
			<GROUP>caller</GROUP>
			<GROUP>continue</GROUP>
			<GROUP>die</GROUP>
			<GROUP>do</GROUP>
			<GROUP>dump</GROUP>
			<GROUP>else</GROUP>
			<GROUP>elsif</GROUP>
			<GROUP>eval</GROUP>
			<GROUP>exit</GROUP>
			<GROUP>foreach</GROUP>
			<GROUP>goto</GROUP>
			<GROUP>if</GROUP>
			<GROUP>import</GROUP>
			<GROUP>last</GROUP>
			<GROUP>local</GROUP>
			<GROUP>my</GROUP>
			<GROUP>new</GROUP>
			<GROUP>next</GROUP>
			<GROUP>no</GROUP>
			<GROUP>package</GROUP>
			<GROUP>redo</GROUP>
			<GROUP>require</GROUP>
			<GROUP>return</GROUP>
			<GROUP>unless</GROUP>
			<GROUP>until</GROUP>
			<GROUP>use</GROUP>
			<GROUP>wantarray</GROUP>
			<GROUP>while</GROUP>
		</SEQ>
		
		<SEQ TYPE="KEYWORD2">
			<GROUP>closedir</GROUP>
			<GROUP>for</GROUP>
			<GROUP>lcfirst</GROUP>
			<GROUP>opendir</GROUP>
			<GROUP>printf</GROUP>
			<GROUP>readdir</GROUP>
			<GROUP>readlink</GROUP>
			<GROUP>seekdir</GROUP>
			<GROUP>socketpair</GROUP>
			<GROUP>substr</GROUP>
			<GROUP>telldir</GROUP>
			<GROUP>tied</GROUP>
			<GROUP>times</GROUP>
			<GROUP>ucfirst</GROUP>
			<GROUP>waitpid</GROUP>
		</SEQ>
	
		<SEQ TYPE="KEYWORD3">
			<GROUP>__FILE__</GROUP>
			<GROUP>__LINE__</GROUP>
			<GROUP>__PACKAGE__</GROUP>
			<GROUP>abs</GROUP>
			<GROUP>accept</GROUP>
			<GROUP>alarm</GROUP>
			<GROUP>atan2</GROUP>
			<GROUP>bind</GROUP>
			<GROUP>binmode</GROUP>
			<GROUP>bless</GROUP>
			<GROUP>chdir</GROUP>
			<GROUP>chmod</GROUP>
			<GROUP>chomp</GROUP>
			<GROUP>chop</GROUP>
			<GROUP>chown</GROUP>
			<GROUP>chr</GROUP>
			<GROUP>chroot</GROUP>
			<GROUP>close</GROUP>
			<GROUP>connect</GROUP>
			<GROUP>cos</GROUP>
			<GROUP>crypt</GROUP>
			<GROUP>dbmclose</GROUP>
			<GROUP>dbmopen</GROUP>
			<GROUP>defined</GROUP>
			<GROUP>delete</GROUP>
			<GROUP>each</GROUP>
			<GROUP>endgrent</GROUP>
			<GROUP>endhostent</GROUP>
			<GROUP>endnetent</GROUP>
			<GROUP>endprotoent</GROUP>
			<GROUP>endpwent</GROUP>
			<GROUP>endservent</GROUP>
			<GROUP>eof</GROUP>
			<GROUP>exec</GROUP>
			<GROUP>exists</GROUP>
			<GROUP>exp</GROUP>
			<GROUP>fcntl</GROUP>
			<GROUP>fileno</GROUP>
			<GROUP>flock</GROUP>
			<GROUP>fork</GROUP>
			<GROUP>formline</GROUP>
			<GROUP>getc</GROUP>
			<GROUP>getgrent</GROUP>
			<GROUP>getgrgid</GROUP>
			<GROUP>getgrnam</GROUP>
			<GROUP>gethostbyaddr</GROUP>
			<GROUP>gethostbyname</GROUP>
			<GROUP>gethostent</GROUP>
			<GROUP>getlogin</GROUP>
			<GROUP>getnetbyaddr</GROUP>
			<GROUP>getnetbyname</GROUP>
			<GROUP>getnetent</GROUP>
			<GROUP>getpeername</GROUP>
			<GROUP>getpgrp</GROUP>
			<GROUP>getppid</GROUP>
			<GROUP>getpriority</GROUP>
			<GROUP>getprotobyname</GROUP>
			<GROUP>getprotobynumber</GROUP>
			<GROUP>getprotoent</GROUP>
			<GROUP>getpwent</GROUP>
			<GROUP>getpwnam</GROUP>
			<GROUP>getpwuid</GROUP>
			<GROUP>getservbyname</GROUP>
			<GROUP>getservbyport</GROUP>
			<GROUP>getservent</GROUP>
			<GROUP>getsockname</GROUP>
			<GROUP>getsockopt</GROUP>
			<GROUP>glob</GROUP>
			<GROUP>gmtime</GROUP>
			<GROUP>grep</GROUP>
			<GROUP>hex</GROUP>
			<GROUP>index</GROUP>
			<GROUP>int</GROUP>
			<GROUP>ioctl</GROUP>
			<GROUP>join</GROUP>
			<GROUP>keys</GROUP>
			<GROUP>kill</GROUP>
			<GROUP>lc</GROUP>
			<GROUP>length</GROUP>
			<GROUP>link</GROUP>
			<GROUP>listen</GROUP>
			<GROUP>localtime</GROUP>
			<GROUP>log</GROUP>
			<GROUP>lstat</GROUP>
			<GROUP>map</GROUP>
			<GROUP>mkdir</GROUP>
			<GROUP>msgctl</GROUP>
			<GROUP>msgget</GROUP>
			<GROUP>msgrcv</GROUP>
			<GROUP>msgsnd</GROUP>
			<GROUP>oct</GROUP>
			<GROUP>our</GROUP>
			<GROUP>open</GROUP>
			<GROUP>ord</GROUP>
			<GROUP>pack</GROUP>
			<GROUP>pipe</GROUP>
			<GROUP>pop</GROUP>
			<GROUP>pos</GROUP>
			<GROUP>print</GROUP>
			<GROUP>push</GROUP>
			<GROUP>quotemeta</GROUP>
			<GROUP>rand</GROUP>
			<GROUP>read</GROUP>
			<GROUP>recv</GROUP>
			<GROUP>ref</GROUP>
			<GROUP>rename</GROUP>
			<GROUP>reset</GROUP>
			<GROUP>reverse</GROUP>
			<GROUP>rewinddir</GROUP>
			<GROUP>rindex</GROUP>
			<GROUP>rmdir</GROUP>
			<GROUP>scalar</GROUP>
			<GROUP>seek</GROUP>
			<GROUP>select</GROUP>
			<GROUP>semctl</GROUP>
			<GROUP>semget</GROUP>
			<GROUP>semop</GROUP>
			<GROUP>send</GROUP>
			<GROUP>setgrent</GROUP>
			<GROUP>sethostent</GROUP>
			<GROUP>setnetent</GROUP>
			<GROUP>setpgrp</GROUP>
			<GROUP>setpriority</GROUP>
			<GROUP>setprotoent</GROUP>
			<GROUP>setpwent</GROUP>
			<GROUP>setservent</GROUP>
			<GROUP>setsockopt</GROUP>
			<GROUP>shift</GROUP>
			<GROUP>shmctl</GROUP>
			<GROUP>shmget</GROUP>
			<GROUP>shmread</GROUP>
			<GROUP>shmwrite</GROUP>
			<GROUP>shutdown</GROUP>
			<GROUP>sin</GROUP>
			<GROUP>sleep</GROUP>
			<GROUP>socket</GROUP>
			<GROUP>sort</GROUP>
			<GROUP>splice</GROUP>
			<GROUP>split</GROUP>
			<GROUP>sprintf</GROUP>
			<GROUP>sqrt</GROUP>
			<GROUP>srand</GROUP>
			<GROUP>stat</GROUP>
			<GROUP>study</GROUP>
			<GROUP>sub</GROUP>
			<GROUP>symlink</GROUP>
			<GROUP>syscall</GROUP>
			<GROUP>sysread</GROUP>
			<GROUP>sysseek</GROUP>
			<GROUP>system</GROUP>
			<GROUP>syswrite</GROUP>
			<GROUP>tell</GROUP>
			<GROUP>tie</GROUP>
			<GROUP>time</GROUP>
			<GROUP>truncate</GROUP>
			<GROUP>uc</GROUP>
			<GROUP>umask</GROUP>
			<GROUP>undef</GROUP>
			<GROUP>unlink</GROUP>
			<GROUP>unpack</GROUP>
			<GROUP>unshift</GROUP>
			<GROUP>untie</GROUP>
			<GROUP>utime</GROUP>
			<GROUP>values</GROUP>
			<GROUP>vec</GROUP>
			<GROUP>wait</GROUP>
			<GROUP>warn</GROUP>
			<GROUP>write</GROUP>
		</SEQ>
		<SEQ TYPE="OPERATOR">
			<GROUP>and</GROUP>
			<GROUP>cmp</GROUP>
			<GROUP>eq</GROUP>
			<GROUP>ge</GROUP>
			<GROUP>le</GROUP>
			<GROUP>ne</GROUP>
			<GROUP>not</GROUP>
			<GROUP>or</GROUP>
			<GROUP>xor</GROUP>
		</SEQ>
		<SEQ TYPE="OPERATOR">x</SEQ>
		<SPAN TYPE="LITERAL2" 
			REQUIRE_WHITESPACE_BEFORE ="TRUE" 
			REQUIRE_WHITESPACE_AFTER ="TRUE" >
			<BEGIN>format</BEGIN>
			<END>.</END>
		</SPAN>

		<!-- RegExps -->
		<SPAN TYPE="LITERAL2" 
			  NO_LINE_BREAK="FALSE" 
              DYNAMIC_TAGGING="TRUE"
			  DELIMITER_MAX_CHAR="1" 
			  DELIMITER_TAG_CHARS=":NO_LETTER_OR_DIGITS:"
              OPTIONAL_MODIFIER = "cgimosx">
			<GROUP>m</GROUP>
			<END></END>
		</SPAN> 

		<SPAN TYPE="LITERAL2"
			  NO_LINE_BREAK="FALSE"
			  NO_OF_MULTIPLE_ENDTAG="2" 
              DYNAMIC_TAGGING="TRUE"
			  DELIMITER_MAX_CHAR="1"
			  DELIMITER_TAG_CHARS=":NO_LETTER_OR_DIGITS:"
              OPTIONAL_MODIFIER = "egimosx">
			<GROUP>s</GROUP>
			<END></END>
		</SPAN> 

		<SPAN TYPE="LITERAL2"
			  NO_LINE_BREAK="FALSE"
			  NO_OF_MULTIPLE_ENDTAG="2" 
              DYNAMIC_TAGGING="TRUE"
			  DELIMITER_MAX_CHAR="1"
			  DELIMITER_TAG_CHARS=":NO_LETTER_OR_DIGITS:"
              OPTIONAL_MODIFIER = "cds">
			<GROUP>y</GROUP>
			<GROUP>tr</GROUP>
			<END></END>
		</SPAN> 

		<!-- Quotes not RegExps  -->
		<SPAN TYPE="LITERAL2"
			  NO_LINE_BREAK="FALSE" 
              DYNAMIC_TAGGING="TRUE"
			  DELIMITER_MAX_CHAR="1"
			  DELIMITER_TAG_CHARS=":LETTER_OR_DIGITS:">
			<GROUP>qq</GROUP>
			<GROUP>qx</GROUP>
			<GROUP>qw</GROUP>
			<END></END>
		</SPAN> 
		<SPAN TYPE="LITERAL2"
			  NO_LINE_BREAK="FALSE" 
              DYNAMIC_TAGGING="TRUE"
			  DELIMITER_MAX_CHAR="1"
			  DELIMITER_TAG_CHARS=":LETTER_OR_DIGITS:"
			  OPTIONAL_MODIFIER = "imosx">
			<GROUP>qr</GROUP>
			<END></END>
		</SPAN> 
		<SPAN TYPE="LITERAL2"
			  NO_LINE_BREAK="FALSE" 
              DYNAMIC_TAGGING="TRUE"
			  DELIMITER_MAX_CHAR="1"
			  DELIMITER_TAG_CHARS=":LETTER_OR_DIGITS:">
			<GROUP>q</GROUP>
			<END></END>
		</SPAN> 

<!--    the normal Match at the End - should be checked if it works -->
		<SPAN TYPE="LITERAL2"
			  NO_LINE_BREAK="TRUE"
			  REQUIRE_END_TAG="TRUE"
              DYNAMIC_TAGGING="FALSE" 
			  DELIMITER_TAG_CHARS=":NO_LETTER_OR_DIGITS:"
              OPTIONAL_MODIFIER = "cgimosx">
			<BEGIN>/</BEGIN>
			<END>/</END>
		</SPAN>

		<SEQ TYPE="OPERATOR">/</SEQ>
		<SEQ TYPE="OPERATOR">&lt;&lt;=</SEQ>


		<SEQ TYPE="DIGIT">@&lt;&lt;</SEQ>   <!-- To avoid inproper Marks -->
		<!-- HERE Documents with different flavours-->
		<SPAN TYPE="LITERAL2" NO_LINE_BREAK="FALSE" 
              DYNAMIC_TAGGING="TRUE" DELIMITER_MAX_CHAR="999"
              DELIMITER_TAG_CHARS=":EMPTY_AS_LINEFEED::ESCAPE_AND_DELIM_AS_ONE:"
              REQUIRE_BEFORE_DELIMITER_CHAR='"'
              REQUIRE_AFTER_DELIMITER_CHAR=":LINEFEED:">
			<BEGIN>&lt;&lt;</BEGIN>
			<END>"</END>
		</SPAN>

		<SPAN TYPE="LITERAL2" NO_LINE_BREAK="FALSE" 
              DYNAMIC_TAGGING="TRUE" DELIMITER_MAX_CHAR="999"
              DELIMITER_TAG_CHARS=":EMPTY_AS_LINEFEED:ESCAPE_AND_DELIM_AS_ONE:"
              REQUIRE_BEFORE_DELIMITER_CHAR="'"
              REQUIRE_AFTER_DELIMITER_CHAR=":LINEFEED:">
			<BEGIN>&lt;&lt;</BEGIN>
			<END>'</END>
		</SPAN>

		<SPAN TYPE="LITERAL2" NO_LINE_BREAK="FALSE" 
              DYNAMIC_TAGGING="TRUE" DELIMITER_MAX_CHAR="999"
              DELIMITER_TAG_CHARS=":EMPTY_AS_LINEFEED:ESCAPE_AND_DELIM_AS_ONE:"
              REQUIRE_BEFORE_DELIMITER_CHAR='`'
              REQUIRE_AFTER_DELIMITER_CHAR=":LINEFEED:">
			<BEGIN>&lt;&lt;</BEGIN>
			<END>`</END>
		</SPAN>

		<SPAN TYPE="LITERAL2" NO_LINE_BREAK="FALSE" 
              DYNAMIC_TAGGING="TRUE" DELIMITER_MAX_CHAR="999"
              REJECT_DELIM_WITH_FIRST_CHAR="$@%[({+-/*?!=&lt;&amp;"
              DELIMITER_TAG_CHARS=":NO_WHITESPACE_BEFORE_DELIM:EMPTY_AS_LINEFEED:NONINTEGER:"
              REQUIRE_AFTER_DELIMITER_CHAR=":LINEFEED:">
			<BEGIN>&lt;&lt;</BEGIN>
			<END>;,)}]>^.:|</END>
		</SPAN>

		<!-- Operators with '<' sign -->
		<SEQ TYPE="OPERATOR">&lt;=</SEQ>
		<SEQ TYPE="OPERATOR">&lt;</SEQ>



<!--    the normal Match at the End - should be checked if it works -->
    <SPAN TYPE="LITERAL2" NO_LINE_BREAK="TRUE" REQUIRE_END_TAG="TRUE">
			<BEGIN>?</BEGIN>
			<END>?</END>
		</SPAN> 

		<SEQ TYPE="OPERATOR">?</SEQ>

	</RULES>

	<RULES SET="POD" DEFAULT="COMMENT2">
		<!-- whitespace: (space and tab) -->
		<WHITESPACE> </WHITESPACE>
		<WHITESPACE>	</WHITESPACE>

		<MARK_FOLLOWING TYPE="LABEL" AT_LINE_START="TRUE">=</MARK_FOLLOWING>
	</RULES>
</MODE>